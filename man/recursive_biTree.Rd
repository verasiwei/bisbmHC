% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recursive_biTree.R
\name{recursive_biTree}
\alias{recursive_biTree}
\title{Set up recursive bi-partition tree}
\usage{
recursive_biTree(
  A,
  cluster.labels.list,
  ncluster,
  cluster.labels,
  n.min,
  method
)
}
\arguments{
\item{A}{It is the consensus graph (the long format of consensus matrix from consensus_build (node to node connection weight))}

\item{cluster.labels.list}{To store a list of labels for each cluster during the process}

\item{ncluster}{To store the number of clusters during the process}

\item{cluster.labels}{A vector of labels for all the input nodes, the order should be consistent with the order of A}

\item{n.min}{The minimum number of nodes for further partition}

\item{method}{The partition method in spectral clustering}
}
\value{
a list with the number of communities, tree path of each node,a list of community labels for each community
}
\description{
\code{recursive_biTree} returns a list with the number of communities, tree path of each node, a list of node labels
}
\examples{
library(dplyr,quietly=TRUE,warn.conflicts=FALSE)
library(igraph,quietly=TRUE,warn.conflicts=FALSE)

g <- graph_from_data_frame(consensus_dat,directed = F,vertices = NULL)
g <- simplify(g)
adj <- get.adjacency(g,type = "both",attr = "weight")

id_label <- bisbmresults[[1]] \%>\%
         filter(type=="id") \%>\%
         filter(level==0) \%>\%
         dplyr::select(node) \%>\%
         arrange(node)
id_label <- id_label$node

cluster.result <- recursive_biTree(adj,cluster.labels.list=list(), 
                                   ncluster=0, cluster.labels=id_label,
                                   n.min=10,method="kmeans")
                                   
head(cluster.result[[1]])
head(cluster.result[[2]])
head(cluster.result[[3]])
}
